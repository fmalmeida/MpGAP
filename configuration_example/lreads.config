/*
 * Configuration File to run fmalmeida/mpgap pipeline.
 */

/*
 * Customizable parameters
 */
params {

                /*
                 * General parameters
                 */

// Output folder name
      outdir = "output"

// Gives a custom prefix for sample results
// If is not given, the pipeline will use the reads names to create a custom prefix
      prefix = ""

// Number of threads to be used by each software.
      threads = 3

// Number of jobs to run in parallel. Be aware that each job (in parallel) can consume
// N threads (set above). Be sure to carefully check your resources before augmenting
// this parameter. For example: parallel_jobs = 2 + threads = 5 can consume until 10
// threads at once.
      parallel_jobs = 1

// This parameter only needs to be set if the software chosen is Canu or Haslr. Is optional for Flye.
// It is an estimate of the size of the genome. Common suffices are allowed, for example, 3.7m or 2.8g
      genomeSize = ""

                /*
                 * Input reads
                 *
                 * The pipeline will choose between: hybrid, shortreads or longreads only assemblies based on the combination of input files given.
                 *
                 * Remember to always double quote file paths.
                 *
                 * When running hybrid assemblies or mixing short read types it is advised to **avoid not required REGEX** and write the full file path, 
                 * using only the required REGEX for paired end reads ("{1,2}") when applicable. So that the pipeline does not load any different read 
                 * that also matches the REGEX and avoid confusions with the inputs.
                 */

// Long reads input files. Just needed to be specified in case of hybrid or longreads-only assembly.
// If none of these are wanted it may be left in blank.
      longreads = "" // Already extracted in fasta or fastq

// This parameter is used to specify the long read sequencing technology used.
// It might be set as one of both: nanopore ; pacbio
      lr_type = "nanopore"

// When assembling pacbio long reads with wtdbg2, it is necessary to tell the pipeline
// whether reads are rs, sq or ccs, so it is properly passed to the assembler.
// Which could take value "rs" for PacBio RSII, "sq" for PacBio Sequel, "ccs" for PacBio CCS reads
      wtdbg2_technology = ""

// Tells the pipeline to interpret the long reads as "corrected" long reads.
// This will activate (if available) the options for corrected reads in the
// assemblers: -corrected (in canu), --pacbio-corr|--nano-corr (in flye), etc.
// Be cautious when using this parameter. If your reads are not corrected, and
// you use this parameter, you will probably do not generate any contig.
      corrected_lreads = false

                /*
                 * Parameters for assembly polishing using long reads raw data
                 * Parameters useful for polishing longreads-only assemblies
                 * Polishers ==> ONT: Nanopolish or Medaka; Pacbio: Arrow.
                 *
                 * They can be used for hybrid assembly strategy 2, to polish
                 * the assemblies with longreads data before shortreads polishing
                 */

// Tells Medaka polisher which model to use according to the basecaller
// used. Please see their page to check for possibilities:
//  https://github.com/nanoporetech/medaka#models.
//
// If left in blank, medaka will not be executed.
      medaka_sequencing_model = "r941_min_high_g360"

// This parameter loads the directory where all the nanopore FAST5 files are stored.
// If this parameter is set, the pipeline is able to also execute the polishing step with nanopolish.
      nanopolish_fast5Path = ""

// This parameter sets to nanopolish the max number of haplotypes to be considered.
// Sometimes the pipeline may crash because to much variation was found exceeding the
// limit. Try augmenting this value (Default: 1000)
      nanopolish_max_haplotypes = 1000

// Number of cores to run nanopolish in parallel
// Beware of your system limits
      cpus = 2

// This parameter loads all the subreads *.bam pacbio raw files for polishing with gcpp.
// In order to nextflow properly use it, one needs to store all the data, from all the cells
// in one single directory and set the filepath as "some/data/*bam".
      pacbio_bams = ""

                /*
                 * Advanced parameters
                 * Controlling the execution of assemblers
                 * It must be set as true to skip the software and false to use it.
                 * Also adding the possibility to pass additional parameters to them
                 * Additional parameters must be in quotes and separated by spaces.
                 */

      quast_additional_parameters = ""            // Give additional parameters to Quast while assessing assembly metrics.
                                                  // Must be given as shown in Quast manual. E.g. " --large --eukaryote ".
      
      skip_unicycler = false                      // Hybrid, shortreads only and longreads only assemblies
      unicycler_additional_parameters = ""        // Must be given as shown in Unicycler manual. E.g. " --mode conservative --no_correct "

      skip_canu      = false                      // Longreads only assemblies
      canu_additional_parameters = ""             // Must be given as shown in Canu manual. E.g. " correctedErrorRate=0.075 corOutCoverage=200 "

      skip_flye      = false                      // Longreads only assemblies
      flye_additional_parameters = ""             // Must be given as shown in Flye manual. E.g. " --meta --iterations 4 "

      skip_raven     = false                      // Longreads only assemblies
      raven_additional_parameters = ""            // Must be given as shown in Raven manual. E.g. " --polishing-rounds 4 "

      skip_wtdbg2    = false                      // Longreads only assemblies
      wtdbg2_additional_parameters = ""           // Must be given as shown in wtdbg2 manual. E.g. " --tidy-reads 5000 "

      skip_shasta    = false                      // Nanopore longreads only assemblies
      shasta_additional_parameters = ""           // Must be given as shown in shasta manual. E.g. " --Reads.minReadLength 5000 "

}


/*
 * Configuring Nextflow reports
 */

//Trace Report
trace {
    enabled = false
    file = "${params.outdir}" + "/annotation_pipeline_trace.txt"
    fields = "task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss"
}

//Timeline Report
timeline {
    enabled = false
    file = "${params.outdir}" + "/annotation_pipeline_timeline.html"
}

//Complete Report
report {
    enabled = false
    file = "${params.outdir}" + "/annotation_pipeline_nextflow_report.html"
}

/*
 * Setting up NF profiles
 * To use different profiles and executors
 * please read more at: https://www.nextflow.io/docs/latest/config.html#config-profiles
 */
profiles {
  standard {
    // Executor
    process.executor = "local"
    // QueueSize limit
    qs = (params.parallel_jobs) ? params.parallel_jobs : 1
    executor {
          name = "local"
          queueSize = qs
    }
  }
}

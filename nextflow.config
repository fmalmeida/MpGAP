/*
                    fmalmeida/mpgap pipeline configuration file

                    Maintained by Felipe Marques de Almeida
                    Contact: almeidafmarques@outlook.com
 */
// loading required / default pipeline parameters
includeConfig 'conf/defaults.config'
// Load base.config (contains some label resources configuration)
includeConfig 'conf/base.config'
// fix type of variable expected
params.hybrid_strategy = params.hybrid_strategy.toString()

// not save version by default
process {
  publishDir = [ 
    path: params.output,
    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
  ]
}


// Nextflow management
params {

  // Boilerplate options
    help                       = false
    get_config                 = false
    get_samplesheet            = false
    validate_params            = true
    schema_ignore_params       = 'selected_profile'
    show_hidden_params         = false
  
  // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

}

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

/*


                      Configuring Nextflow Scopes.

                      Enable or not the production of Nextflow Reports


 */
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
// Trace Report
trace {
    enabled = true      // Enable? true or false
    file = "${params.tracedir}" + "/mpgap_tracing_${trace_timestamp}.txt"
    fields = 'task_id,name,status,exit,realtime,cpus,%cpu,memory,%mem,rss'
}

// Timeline Report
timeline {
    enabled = true      // Enable? true or false
    file = "${params.tracedir}" + "/mpgap_timeline_${trace_timestamp}.html"
}

// Complete Report
report {
    enabled = true      // Enable? true or false
    file = "${params.tracedir}" + "/mpgap_report_${trace_timestamp}.html"
}

/*
                                    Setting up NF profiles
                            To use different profiles and executors
            please read more at: https://www.nextflow.io/docs/latest/config.html#config-profiles
 */
profiles {

  // load profiles
  standard    { includeConfig 'conf/standard.config'    }
  conda       { includeConfig 'conf/conda.config'       }
  docker      { includeConfig 'conf/docker.config'      }
  singularity { includeConfig 'conf/singularity.config' }
  test        { includeConfig 'conf/test.config'        }

}

/*
                                    Adding manifest
*/
manifest {
  name            = "fmalmeida/mpgap"
  author          = "Felipe Marques de Almeida"
  description     = "Nextflow pipeline for de novo genome assembly"
  homePage        = "https://github.com/fmalmeida/mpgap"
  mainScript      = "main.nf"
  nextflowVersion = "!>=21.10.3"
  version         = "3.2"
}